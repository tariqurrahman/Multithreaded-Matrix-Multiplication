First matrix:
        [ [0 1 1 3 1 3 2 3 1 8],
          [3 4 9 9 3 9 4 4 1 4],
          [4 9 5 8 9 4 5 0 9 8],
          [0 2 0 2 6 5 1 8 6 1],
          [9 2 6 6 5 8 9 5 3 4],
          [7 1 7 0 0 6 7 9 0 1],
          [9 7 6 6 3 5 6 5 5 2],
          [0 0 3 1 8 1 1 1 4 5],
          [8 2 3 6 3 3 5 8 6 8],
          [1 2 2 8 4 0 3 6 8 5] ]
Second matrix:
        [ [5 7 0 7 1 3 7 8 5 2],
          [5 6 1 8 5 7 3 6 7 1],
          [2 7 2 4 6 6 5 6 5 8],
          [4 8 9 4 1 2 8 5 0 9],
          [4 1 7 9 4 4 7 2 0 6],
          [2 3 0 3 0 7 4 0 7 1],
          [9 0 7 8 8 2 1 9 5 5],
          [9 0 2 7 6 8 3 7 2 2],
          [5 6 2 2 8 2 5 9 2 2],
          [9 3 7 9 3 2 6 4 9 7] ]
------------------------------------------------
The queue is empty Thread-1 is waiting
Producer puts row 0-3 of matrix A and column 0-3 of B to buffer
Producer puts row 0-3 of matrix A and column 3-6 of B to buffer
Consumer Thread-2 gets row  0-3 of matrix A and column 0-3 of B from buffer
Consumer Thread-1 gets row  0-3 of matrix A and column 3-6 of B from buffer
Consumer Thread-2 finishes calculating
         [ [0 1 1 3 1 3 2 3 1 8],
           [3 4 9 9 3 9 4 4 1 4],
           [4 9 5 8 9 4 5 0 9 8] ]
  *      [ [5 7 0],
           [5 6 1],
           [2 7 2],
           [4 8 9],
           [4 1 7],
           [2 3 0],
           [9 0 7],
           [9 0 2],
           [5 6 2],
           [9 3 7] ]
  =>     [ [151 77 115],
           [232 228 190],
           [313 280 263] ]
Consumer Thread-1 finishes calculating
         [ [0 1 1 3 1 3 2 3 1 8],
           [3 4 9 9 3 9 4 4 1 4],
           [4 9 5 8 9 4 5 0 9 8] ]
  *      [ [7 1 3],
           [8 5 7],
           [4 6 6],
           [4 1 2],
           [9 4 4],
           [3 0 7],
           [8 8 2],
           [7 6 8],
           [2 8 2],
           [9 3 2] ]
  =>     [ [153 84 90],
           [277 174 234],
           [375 259 229] ]
Producer puts row 0-3 of matrix A and column 6-9 of B to buffer
Producer puts row 0-3 of matrix A and column 9-10 of B to buffer
Consumer Thread-2 gets row  0-3 of matrix A and column 6-9 of B from buffer
Consumer Thread-2 finishes calculating
         [ [0 1 1 3 1 3 2 3 1 8],
           [3 4 9 9 3 9 4 4 1 4],
           [4 9 5 8 9 4 5 0 9 8] ]
  *      [ [7 8 5],
           [3 6 7],
           [5 6 5],
           [8 5 0],
           [7 2 0],
           [4 0 7],
           [1 9 5],
           [3 7 2],
           [5 9 2],
           [6 4 9] ]
  =>     [ [115 109 123],
           [252 242 217],
           [321 332 251] ]
Producer puts row 3-6 of matrix A and column 0-3 of B to buffer
Producer puts row 3-6 of matrix A and column 3-6 of B to buffer
Producer puts row 3-6 of matrix A and column 6-9 of B to buffer
Producer puts row 3-6 of matrix A and column 9-10 of B to buffer
Consumer Thread-2 gets row  0-3 of matrix A and column 9-10 of B from buffer
Consumer Thread-2 finishes calculating
         [ [0 1 1 3 1 3 2 3 1 8],
           [3 4 9 9 3 9 4 4 1 4],
           [4 9 5 8 9 4 5 0 9 8] ]
  *      [ [2],
           [1],
           [8],
           [9],
           [6],
           [1],
           [5],
           [2],
           [2],
           [7] ]
  =>     [ [119],
           [248],
           [286] ]
Producer puts row 6-9 of matrix A and column 0-3 of B to buffer
Producer puts row 6-9 of matrix A and column 3-6 of B to buffer
The queue is full Thread-0 is waiting, size: 5
Consumer Thread-1 gets row  3-6 of matrix A and column 0-3 of B from buffer
Consumer Thread-1 finishes calculating
         [ [0 2 0 2 6 5 1 8 6 1],
           [9 2 6 6 5 8 9 5 3 4],
           [7 1 7 0 0 6 7 9 0 1] ]
  *      [ [5 7 0],
           [5 6 1],
           [2 7 2],
           [4 8 9],
           [4 1 7],
           [2 3 0],
           [9 0 7],
           [9 0 2],
           [5 6 2],
           [9 3 7] ]
  =>     [ [172 88 104],
           [304 224 210],
           [219 125 89] ]
Consumer Thread-2 gets row  3-6 of matrix A and column 3-6 of B from buffer
Consumer Thread-2 finishes calculating
         [ [0 2 0 2 6 5 1 8 6 1],
           [9 2 6 6 5 8 9 5 3 4],
           [7 1 7 0 0 6 7 9 0 1] ]
  *      [ [7 1 3],
           [8 5 7],
           [4 6 6],
           [4 1 2],
           [9 4 4],
           [3 0 7],
           [8 8 2],
           [7 6 8],
           [2 8 2],
           [9 3 2] ]
  =>     [ [178 143 157],
           [345 219 237],
           [231 167 200] ]
Consumer Thread-1 gets row  3-6 of matrix A and column 6-9 of B from buffer
Consumer Thread-1 finishes calculating
         [ [0 2 0 2 6 5 1 8 6 1],
           [9 2 6 6 5 8 9 5 3 4],
           [7 1 7 0 0 6 7 9 0 1] ]
  *      [ [7 8 5],
           [3 6 7],
           [5 6 5],
           [8 5 0],
           [7 2 0],
           [4 0 7],
           [1 9 5],
           [3 7 2],
           [5 9 2],
           [6 4 9] ]
  =>     [ [145 157 91],
           [277 319 242],
           [151 234 181] ]
Producer puts row 6-9 of matrix A and column 6-9 of B to buffer
Producer puts row 6-9 of matrix A and column 9-10 of B to buffer
Producer puts row 9-10 of matrix A and column 0-3 of B to buffer
The queue is full Thread-0 is waiting, size: 5
Consumer Thread-1 gets row  3-6 of matrix A and column 9-10 of B from buffer
Consumer Thread-1 finishes calculating
         [ [0 2 0 2 6 5 1 8 6 1],
           [9 2 6 6 5 8 9 5 3 4],
           [7 1 7 0 0 6 7 9 0 1] ]
  *      [ [2],
           [1],
           [8],
           [9],
           [6],
           [1],
           [5],
           [2],
           [2],
           [7] ]
  =>     [ [101],
           [249],
           [137] ]
Consumer Thread-2 gets row  6-9 of matrix A and column 0-3 of B from buffer
Consumer Thread-2 finishes calculating
         [ [9 7 6 6 3 5 6 5 5 2],
           [0 0 3 1 8 1 1 1 4 5],
           [8 2 3 6 3 3 5 8 6 8] ]
  *      [ [5 7 0],
           [5 6 1],
           [2 7 2],
           [4 8 9],
           [4 1 7],
           [2 3 0],
           [9 0 7],
           [9 0 2],
           [5 6 2],
           [9 3 7] ]
  =>     [ [280 249 170],
           [127 79 123],
           [317 209 202] ]
Producer puts row 9-10 of matrix A and column 3-6 of B to buffer
Producer puts row 9-10 of matrix A and column 6-9 of B to buffer
The queue is full Thread-0 is waiting, size: 5
Consumer Thread-2 gets row  6-9 of matrix A and column 3-6 of B from buffer
Consumer Thread-2 finishes calculating
         [ [9 7 6 6 3 5 6 5 5 2],
           [0 0 3 1 8 1 1 1 4 5],
           [8 2 3 6 3 3 5 8 6 8] ]
  *      [ [7 1 3],
           [8 5 7],
           [4 6 6],
           [4 1 2],
           [9 4 4],
           [3 0 7],
           [8 8 2],
           [7 6 8],
           [2 8 2],
           [9 3 2] ]
  =>     [ [320 222 237],
           [159 112 87],
           [324 214 203] ]
Producer puts row 9-10 of matrix A and column 9-10 of B to buffer
The queue is full Thread-0 is waiting, size: 5
Consumer Thread-1 gets row  6-9 of matrix A and column 6-9 of B from buffer
Consumer Thread-1 finishes calculating
         [ [9 7 6 6 3 5 6 5 5 2],
           [0 0 3 1 8 1 1 1 4 5],
           [8 2 3 6 3 3 5 8 6 8] ]
  *      [ [7 8 5],
           [3 6 7],
           [5 6 5],
           [8 5 0],
           [7 2 0],
           [4 0 7],
           [1 9 5],
           [3 7 2],
           [5 9 2],
           [6 4 9] ]
  =>     [ [261 328 227],
           [137 111 82],
           [265 317 215] ]
Consumer Thread-2 gets row  6-9 of matrix A and column 9-10 of B from buffer
Consumer Thread-2 finishes calculating
         [ [9 7 6 6 3 5 6 5 5 2],
           [0 0 3 1 8 1 1 1 4 5],
           [8 2 3 6 3 3 5 8 6 8] ]
  *      [ [2],
           [1],
           [8],
           [9],
           [6],
           [1],
           [5],
           [2],
           [2],
           [7] ]
  =>     [ [214],
           [132],
           [226] ]
Consumer Thread-1 gets row  9-10 of matrix A and column 0-3 of B from buffer
Consumer Thread-1 finishes calculating
         [ [1 2 2 8 4 0 3 6 8 5] ]
  *      [ [5 7 0],
           [5 6 1],
           [2 7 2],
           [4 8 9],
           [4 1 7],
           [2 3 0],
           [9 0 7],
           [9 0 2],
           [5 6 2],
           [9 3 7] ]
  =>     [ [233 164 190] ]
Consumer Thread-2 gets row  9-10 of matrix A and column 3-6 of B from buffer
Consumer Thread-2 finishes calculating
         [ [1 2 2 8 4 0 3 6 8 5] ]
  *      [ [7 1 3],
           [8 5 7],
           [4 6 6],
           [4 1 2],
           [9 4 4],
           [3 0 7],
           [8 8 2],
           [7 6 8],
           [2 8 2],
           [9 3 2] ]
  =>     [ [226 186 141] ]
Consumer Thread-1 gets row  9-10 of matrix A and column 6-9 of B from buffer
Consumer Thread-1 finishes calculating
         [ [1 2 2 8 4 0 3 6 8 5] ]
  *      [ [7 8 5],
           [3 6 7],
           [5 6 5],
           [8 5 0],
           [7 2 0],
           [4 0 7],
           [1 9 5],
           [3 7 2],
           [5 9 2],
           [6 4 9] ]
  =>     [ [206 241 117] ]
Consumer Thread-1 gets row  9-10 of matrix A and column 9-10 of B from buffer
Consumer Thread-1 finishes calculating
         [ [1 2 2 8 4 0 3 6 8 5] ]
  *      [ [2],
           [1],
           [8],
           [9],
           [6],
           [1],
           [5],
           [2],
           [2],
           [7] ]
  =>     [ [194] ]
Producer successfully assembly all the results from consumer threads
------------------------------------------------
Final result of parallel matrix multiplication:
         [ [151 77 115 153 84 90 115 109 123 119],
           [232 228 190 277 174 234 252 242 217 248],
           [313 280 263 375 259 229 321 332 251 286],
           [172 88 104 178 143 157 145 157 91 101],
           [304 224 210 345 219 237 277 319 242 249],
           [219 125 89 231 167 200 151 234 181 137],
           [280 249 170 320 222 237 261 328 227 214],
           [127 79 123 159 112 87 137 111 82 132],
           [317 209 202 324 214 203 265 317 215 226],
           [233 164 190 226 186 141 206 241 117 194] ]
Verified result of sequential matrix multiplication: 
        [ [151 77 115 153 84 90 115 109 123 119],
          [232 228 190 277 174 234 252 242 217 248],
          [313 280 263 375 259 229 321 332 251 286],
          [172 88 104 178 143 157 145 157 91 101],
          [304 224 210 345 219 237 277 319 242 249],
          [219 125 89 231 167 200 151 234 181 137],
          [280 249 170 320 222 237 261 328 227 214],
          [127 79 123 159 112 87 137 111 82 132],
          [317 209 202 324 214 203 265 317 215 226],
          [233 164 190 226 186 141 206 241 117 194] ]
------------------------------------------------
PRODUCER / CONSUMER SIMULATION RESULT
Simulation Time:                     289ms
Average Thread Sleep Time:           24.34375
Number of Producer Threads:          1
Number of Consumer Threads:          2
Size of Buffer:                      5
Total Number of Items Produced:      16
 Thread 0:                           16
Total Number of Items Consumed:      16
 Thread 1:                           8
 Thread 2:                           8
Number Of Items Remaining in Buffer: 0
Number Of Times Buffer Was Full:     4
Number Of Times Buffer Was Empty:    1
