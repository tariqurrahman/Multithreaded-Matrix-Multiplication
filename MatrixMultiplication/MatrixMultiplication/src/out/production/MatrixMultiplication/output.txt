First matrix:
        [ [9 5 4 4 1 4 4 2 5 9],
          [0 0 7 7 7 2 3 9 9 8],
          [3 5 2 4 2 9 7 3 5 7],
          [7 7 6 1 0 7 5 3 7 2],
          [4 7 5 0 1 0 6 0 9 5],
          [6 7 1 9 4 7 7 3 8 6],
          [3 1 0 1 4 1 4 5 4 0],
          [1 6 6 9 7 5 9 3 6 3],
          [8 9 4 5 3 8 0 1 3 5],
          [7 4 7 5 0 6 5 6 1 5] ]
Second matrix:
        [ [4 9 8 3 5 1 4 4 3 0],
          [0 1 0 8 9 0 4 4 7 7],
          [9 1 7 0 5 3 0 6 5 0],
          [2 2 2 6 7 0 1 2 3 4],
          [8 1 1 8 2 2 3 2 5 3],
          [6 8 0 2 8 5 7 8 5 3],
          [1 0 6 6 6 8 1 9 7 5],
          [4 7 3 1 7 7 9 0 0 6],
          [7 2 6 7 7 0 1 0 5 5],
          [8 7 4 2 7 6 4 8 1 9] ]
------------------------------------------------
The queue is empty Thread-1 is waiting
The queue is empty Thread-2 is waiting
Producer puts row 0-3 of matrix A and column 0-3 of B to buffer
Consumer Thread-1 gets row  0-3 of matrix A and column 0-3 of B from buffer
The queue is empty Thread-2 is waiting
Consumer Thread-1 finishes calculating
         [ [9 5 4 4 1 4 4 2 5 9],
           [0 0 7 7 7 2 3 9 9 8],
           [3 5 2 4 2 9 7 3 5 7] ]
  *      [ [4 9 8],
           [0 1 0],
           [9 1 7],
           [2 2 2],
           [8 1 1],
           [6 8 0],
           [1 0 6],
           [4 7 3],
           [7 2 6],
           [8 7 4] ]
  =>     [ [231 218 205],
           [311 181 201],
           [218 196 157] ]
Producer puts row 0-3 of matrix A and column 3-6 of B to buffer
Consumer Thread-2 gets row  0-3 of matrix A and column 3-6 of B from buffer
Consumer Thread-2 finishes calculating
         [ [9 5 4 4 1 4 4 2 5 9],
           [0 0 7 7 7 2 3 9 9 8],
           [3 5 2 4 2 9 7 3 5 7] ]
  *      [ [3 5 1],
           [8 9 0],
           [0 5 3],
           [6 7 0],
           [8 2 2],
           [2 8 5],
           [6 6 8],
           [1 7 7],
           [7 7 0],
           [2 7 6] ]
  =>     [ [186 308 143],
           [208 314 180],
           [201 321 177] ]
Producer puts row 0-3 of matrix A and column 6-9 of B to buffer
Consumer Thread-1 gets row  0-3 of matrix A and column 6-9 of B from buffer
Consumer Thread-1 finishes calculating
         [ [9 5 4 4 1 4 4 2 5 9],
           [0 0 7 7 7 2 3 9 9 8],
           [3 5 2 4 2 9 7 3 5 7] ]
  *      [ [4 4 3],
           [4 4 7],
           [0 6 5],
           [1 2 3],
           [3 2 5],
           [7 8 5],
           [1 9 7],
           [9 0 0],
           [1 0 5],
           [4 8 1] ]
  =>     [ [154 230 181],
           [167 177 175],
           [172 247 202] ]
Producer puts row 0-3 of matrix A and column 9-10 of B to buffer
Producer puts row 3-6 of matrix A and column 0-3 of B to buffer
Consumer Thread-1 gets row  0-3 of matrix A and column 9-10 of B from buffer
Consumer Thread-1 finishes calculating
         [ [9 5 4 4 1 4 4 2 5 9],
           [0 0 7 7 7 2 3 9 9 8],
           [3 5 2 4 2 9 7 3 5 7] ]
  *      [ [0],
           [7],
           [0],
           [4],
           [3],
           [3],
           [5],
           [6],
           [5],
           [9] ]
  =>     [ [204],
           [241],
           [225] ]
Producer puts row 3-6 of matrix A and column 3-6 of B to buffer
Producer puts row 3-6 of matrix A and column 6-9 of B to buffer
Consumer Thread-2 gets row  3-6 of matrix A and column 0-3 of B from buffer
Consumer Thread-2 finishes calculating
         [ [7 7 6 1 0 7 5 3 7 2],
           [4 7 5 0 1 0 6 0 9 5],
           [6 7 1 9 4 7 7 3 8 6] ]
  *      [ [4 9 8],
           [0 1 0],
           [9 1 7],
           [2 2 2],
           [8 1 1],
           [6 8 0],
           [1 0 6],
           [4 7 3],
           [7 2 6],
           [8 7 4] ]
  =>     [ [208 183 189],
           [178 102 178],
           [248 219 200] ]
Producer puts row 3-6 of matrix A and column 9-10 of B to buffer
Consumer Thread-2 gets row  3-6 of matrix A and column 3-6 of B from buffer
Consumer Thread-2 finishes calculating
         [ [7 7 6 1 0 7 5 3 7 2],
           [4 7 5 0 1 0 6 0 9 5],
           [6 7 1 9 4 7 7 3 8 6] ]
  *      [ [3 5 1],
           [8 9 0],
           [0 5 3],
           [6 7 0],
           [8 2 2],
           [2 8 5],
           [6 6 8],
           [1 7 7],
           [7 7 0],
           [2 7 6] ]
  =>     [ [183 305 133],
           [185 244 99],
           [287 386 165] ]
Producer puts row 6-9 of matrix A and column 0-3 of B to buffer
Producer puts row 6-9 of matrix A and column 3-6 of B to buffer
Consumer Thread-1 gets row  3-6 of matrix A and column 6-9 of B from buffer
Consumer Thread-1 finishes calculating
         [ [7 7 6 1 0 7 5 3 7 2],
           [4 7 5 0 1 0 6 0 9 5],
           [6 7 1 9 4 7 7 3 8 6] ]
  *      [ [4 4 3],
           [4 4 7],
           [0 6 5],
           [1 2 3],
           [3 2 5],
           [7 8 5],
           [1 9 7],
           [9 0 0],
           [1 0 5],
           [4 8 1] ]
  =>     [ [153 211 210],
           [82 170 183],
           [188 251 249] ]
Producer puts row 6-9 of matrix A and column 6-9 of B to buffer
Producer puts row 6-9 of matrix A and column 9-10 of B to buffer
Consumer Thread-1 gets row  3-6 of matrix A and column 9-10 of B from buffer
Consumer Thread-1 finishes calculating
         [ [7 7 6 1 0 7 5 3 7 2],
           [4 7 5 0 1 0 6 0 9 5],
           [6 7 1 9 4 7 7 3 8 6] ]
  *      [ [0],
           [7],
           [0],
           [4],
           [3],
           [3],
           [5],
           [6],
           [5],
           [9] ]
  =>     [ [170],
           [172],
           [265] ]
Producer puts row 9-10 of matrix A and column 0-3 of B to buffer
Producer puts row 9-10 of matrix A and column 3-6 of B to buffer
The queue is full Thread-0 is waiting, size: 5
Consumer Thread-2 gets row  6-9 of matrix A and column 0-3 of B from buffer
Consumer Thread-2 finishes calculating
         [ [3 1 0 1 4 1 4 5 4 0],
           [1 6 6 9 7 5 9 3 6 3],
           [8 9 4 5 3 8 0 1 3 5] ]
  *      [ [4 9 8],
           [0 1 0],
           [9 1 7],
           [2 2 2],
           [8 1 1],
           [6 8 0],
           [1 0 6],
           [4 7 3],
           [7 2 6],
           [8 7 4] ]
  =>     [ [104 85 93],
           [249 140 186],
           [215 210 146] ]
Consumer Thread-2 gets row  6-9 of matrix A and column 3-6 of B from buffer
Consumer Thread-2 finishes calculating
         [ [3 1 0 1 4 1 4 5 4 0],
           [1 6 6 9 7 5 9 3 6 3],
           [8 9 4 5 3 8 0 1 3 5] ]
  *      [ [3 5 1],
           [8 9 0],
           [0 5 3],
           [6 7 0],
           [8 2 2],
           [2 8 5],
           [6 6 8],
           [1 7 7],
           [7 7 0],
           [2 7 6] ]
  =>     [ [114 134 83],
           [276 344 169],
           [198 309 103] ]
Producer puts row 9-10 of matrix A and column 6-9 of B to buffer
Producer puts row 9-10 of matrix A and column 9-10 of B to buffer
The queue is full Thread-0 is waiting, size: 5
Consumer Thread-1 gets row  6-9 of matrix A and column 6-9 of B from buffer
Consumer Thread-1 finishes calculating
         [ [3 1 0 1 4 1 4 5 4 0],
           [1 6 6 9 7 5 9 3 6 3],
           [8 9 4 5 3 8 0 1 3 5] ]
  *      [ [4 4 3],
           [4 4 7],
           [0 6 5],
           [1 2 3],
           [3 2 5],
           [7 8 5],
           [1 9 7],
           [9 0 0],
           [1 0 5],
           [4 8 1] ]
  =>     [ [89 70 92],
           [147 241 258],
           [170 212 197] ]
Consumer Thread-1 gets row  6-9 of matrix A and column 9-10 of B from buffer
Consumer Thread-1 finishes calculating
         [ [3 1 0 1 4 1 4 5 4 0],
           [1 6 6 9 7 5 9 3 6 3],
           [8 9 4 5 3 8 0 1 3 5] ]
  *      [ [0],
           [7],
           [0],
           [4],
           [3],
           [3],
           [5],
           [6],
           [5],
           [9] ]
  =>     [ [96],
           [234],
           [182] ]
Consumer Thread-2 gets row  9-10 of matrix A and column 0-3 of B from buffer
Consumer Thread-2 finishes calculating
         [ [7 4 7 5 0 6 5 6 1 5] ]
  *      [ [4 9 8],
           [0 1 0],
           [9 1 7],
           [2 2 2],
           [8 1 1],
           [6 8 0],
           [1 0 6],
           [4 7 3],
           [7 2 6],
           [8 7 4] ]
  =>     [ [213 211 189] ]
Consumer Thread-1 gets row  9-10 of matrix A and column 3-6 of B from buffer
Consumer Thread-1 finishes calculating
         [ [7 4 7 5 0 6 5 6 1 5] ]
  *      [ [3 5 1],
           [8 9 0],
           [0 5 3],
           [6 7 0],
           [8 2 2],
           [2 8 5],
           [6 6 8],
           [1 7 7],
           [7 7 0],
           [2 7 6] ]
  =>     [ [148 303 170] ]
Consumer Thread-2 gets row  9-10 of matrix A and column 6-9 of B from buffer
Consumer Thread-2 finishes calculating
         [ [7 4 7 5 0 6 5 6 1 5] ]
  *      [ [4 4 3],
           [4 4 7],
           [0 6 5],
           [1 2 3],
           [3 2 5],
           [7 8 5],
           [1 9 7],
           [9 0 0],
           [1 0 5],
           [4 8 1] ]
  =>     [ [171 229 174] ]
Consumer Thread-1 gets row  9-10 of matrix A and column 9-10 of B from buffer
Consumer Thread-1 finishes calculating
         [ [7 4 7 5 0 6 5 6 1 5] ]
  *      [ [0],
           [7],
           [0],
           [4],
           [3],
           [3],
           [5],
           [6],
           [5],
           [9] ]
  =>     [ [177] ]
Producer successfully assembly all the results from consumer threads
------------------------------------------------
Final result of parallel matrix multiplication:
         [ [231 218 205 186 308 143 154 230 181 204],
           [311 181 201 208 314 180 167 177 175 241],
           [218 196 157 201 321 177 172 247 202 225],
           [208 183 189 183 305 133 153 211 210 170],
           [178 102 178 185 244 99 82 170 183 172],
           [248 219 200 287 386 165 188 251 249 265],
           [104 85 93 114 134 83 89 70 92 96],
           [249 140 186 276 344 169 147 241 258 234],
           [215 210 146 198 309 103 170 212 197 182],
           [213 211 189 148 303 170 171 229 174 177] ]
Verified result of sequential matrix multiplication: 
        [ [231 218 205 186 308 143 154 230 181 204],
          [311 181 201 208 314 180 167 177 175 241],
          [218 196 157 201 321 177 172 247 202 225],
          [208 183 189 183 305 133 153 211 210 170],
          [178 102 178 185 244 99 82 170 183 172],
          [248 219 200 287 386 165 188 251 249 265],
          [104 85 93 114 134 83 89 70 92 96],
          [249 140 186 276 344 169 147 241 258 234],
          [215 210 146 198 309 103 170 212 197 182],
          [213 211 189 148 303 170 171 229 174 177] ]
------------------------------------------------
PRODUCER / CONSUMER SIMULATION RESULT
Simulation Time:                     328ms
Average Thread Sleep Time:           27.28125
Number of Producer Threads:          1
Number of Consumer Threads:          2
Size of Buffer:                      5
Total Number of Items Produced:      16
 Thread 0:                           16
Total Number of Items Consumed:      16
 Thread 1:                           9
 Thread 2:                           7
Number Of Items Remaining in Buffer: 0
Number Of Times Buffer Was Full:     2
Number Of Times Buffer Was Empty:    3
